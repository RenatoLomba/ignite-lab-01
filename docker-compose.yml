version: '3'

services:
  # Application

  database:
    image: 'bitnami/postgresql'
    ports:
      - '5432:5432'
    environment:
      - POSTGRESQL_USERNAME=docker
      - POSTGRESQL_PASSWORD=docker
      - POSTGRESQL_DATABASE=app
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    networks:
      - nesjs-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    depends_on:
      - database
    networks:
      - nesjs-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - nesjs-network

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - nesjs-network

  purchases:
    env_file:
      - ./purchases/.env
    command: sh -c "npx prisma migrate dev && npm run start:dev"
    build: ./purchases
    container_name: purchases
    ports:
      - 3333:3333
    volumes:
      - ./purchases:/usr/app
    depends_on:
      - database
      - kafka
    networks:
      - nesjs-network

  classroom:
    env_file:
      - ./classroom/.env
    command: sh -c "npx prisma migrate dev && npm run start:dev"
    build: ./classroom
    container_name: classroom
    ports:
      - 3334:3334
    volumes:
      - ./classroom:/usr/app
    depends_on:
      - database
      - kafka
    networks:
      - nesjs-network

  gateway:
    command: sh -c "npm run start:dev"
    build: ./gateway
    container_name: gateway
    ports:
      - 3332:3332
    volumes:
      - ./gateway:/usr/app
    depends_on:
      - database
      - kafka
      - purchases
      - classroom
    networks:
      - nesjs-network

volumes:
  postgresql_data:
    driver: local

networks:
  nesjs-network:
